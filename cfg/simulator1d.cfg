/*
 * Software License Agreement (New BSD License)
 *
 * Copyright (c) 2013, Keith Leung, Felipe Inostroza
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Advanced Mining Technology Center (AMTC), the
 *       Universidad de Chile, nor the names of its contributors may be 
 *       used to endorse or promote products derived from this software without 
 *       specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE AMTC, UNIVERSIDAD DE CHILE, OR THE COPYRIGHT 
 * HOLDERS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE 
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF 
 * THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// Simulator1d configuration file

timesteps = 2000;
sec_per_timestep = 0.1;

//Computation:
{
  nThreadsPropagationStep = 1; // 1 thread for every 150 - 200  particles seem to be the best
  nThreadsMapUpdate = 1;
  nThreadsParticleWeighting = 1;
  logToFile = true;
};

// Process Model and Trajectory Generation
Trajectory:
{
  nSegments = 5; // number of constant velocity segments
  max_dx_per_sec = 0.30;  // max x-displacement per second
  min_dx_per_sec = 0.10;  // min x-displacement per second
  vardx = 0.000500; // variance in x displacement per second
};

Landmarks:
{
  nLandmarks = 7; // number of landmarks
  varlmx = 0.0000010; // increase in landmark uncertainty per timestep
};

// Range-Bearing Measurement Model 
Measurement:
{
  rangeLimitMax = 3.0; // measurement range limit
  rangeLimitMin = 0.5; // measurement range limit				
  rangeLimitBuffer = 0.2; // buffer zone around range limit in which negative information has no effects
  probDetection = 0.95; // probability of detection
  clutterIntensity = 0.05; // uniform clutter intensity
  varzr = 0.0005; // measurement variance 
};

// RB-PHD Filter Settings
Filter:
{
  nParticles = 50; // number of particles
  measurementNoiseInflationFactor = 10.0; // inflation factor of measurement covariance
  birthGaussianWeight = 0.01; // weight assigned to new birth Gaussians
  newGaussianCreateInnovMDThreshold = 3.0; // during update, Gaussians with innovation mahalanobis distance above this are not created
  importanceWeightingMeasurementLikelihoodMDThreshold = 3.0; // for importance weighting
  gaussianMergingThreshold = 0.1; // mahalanobis distance threshold for Gaussian merging
  gaussianMergingCovarianceInflationFactor = 1.5; // inflation of covariance after merging
  gaussianPruningThreshold = 0.001; // Gaussians with weights below this are pruned
  effectiveNumberOfParticlesThreshold = 10.0; // Threshold for resampling
  minInterSampleTimesteps = 1; // Minimum number of timesteps between resampling
  importanceWeightingEvalPointCount = 8; // number of points to use for evaluation particle weights (weighting strategy)
  reportTimingInfo = true; 
};